{"version":3,"sources":["common/FormGroup.js","components/Home.js","components/Confirmation.js","App.js","reportWebVitals.js","index.js"],"names":["FormGroup","children","text","words","split","className","htmlFor","map","word","toUpperCase","substring","join","required","value","vfirstname","length","vemail","isEmail","vpassword","Home","props","useState","firstname","setFirstname","email","setEmail","password","setPassword","onSubmit","e","preventDefault","history","push","pathname","state","autoComplete","type","name","onChange","target","validations","Confirmation","data","location","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.9df97c0b.chunk.js","sourcesContent":["import React from 'react'\n\nconst FormGroup = ({children, text}) => {\n\n    const words = text.split(\" \")\n\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={text}>\n                {words.map((word) => {\n                    return word[0].toUpperCase() + word.substring(1)\n                }).join(\" \")}\n            </label>\n            {children}\n        </div>\n    )\n}\n\nexport default FormGroup\n\n// component used for every form group in the homepage form","import React, { useState } from 'react';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport { isEmail } from \"validator\";\nimport FormGroup from '../common/FormGroup';\n\n// function to validate required field\nconst required = (value) => {\n    if (!value) {\n        return (\n            <div className=\"alert\">\n                This field is required!\n            </div>\n        )\n    }\n}\n\n// function that validates first name\nconst vfirstname = (value) => {\n    if(value.length < 2 || value.length >= 20) {\n        return (\n            <div className=\"alert\">\n                This field must be between 2 and 20 characters.\n            </div>\n        )\n    }\n}\n\n// function that validates email\nconst vemail = (value) => {\n    if(!isEmail(value)) {\n        return (\n            <div className=\"alert\">\n                This is not a valid email address.\n            </div>\n        )\n    }\n}\n\n// function that validates password\nconst vpassword = (value) => {\n    if(value.length < 6 || value.length >= 40) {\n        return (\n            <div className=\"alert\">\n                The password must be between 6 and 40 characters.\n            </div>\n        )\n    }\n}\n\nconst Home = (props) => {\n\n    const [firstname, setFirstname] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    // stores firstname in firstname state\n    const onChangeFirstname = (e) => {\n        const firstname = e.target.value\n        setFirstname(firstname)\n    }\n\n    // stores email in email state\n    const onChangeEmail = (e) => {\n        const email = e.target.value\n        setEmail(email)\n    }\n\n    // stores password in password state\n    const onChangePassword = (e) => {\n        const password = e.target.value\n        setPassword(password)\n    }\n\n    // handle signup and redirect to confirmation page\n    const handleSignup = (e) => {\n        e.preventDefault()\n        props.history.push({\n            pathname: \"/confirmation\",\n            state: [ firstname, email ]\n        })\n    }\n\n    return (\n        <div className=\"wrapper\">\n            <div className=\"container\">\n                \n                <div className=\"sub-section\">\n                    <h1 className=\"light-heading\">Let's</h1>\n                    <h1>Sign Up</h1>\n                </div>\n\n                <div className=\"sub-section\">\n                    Use the form below to sign up for this super awesome service. You're only a few steps away!\n                </div>\n\n                    <Form onSubmit={handleSignup} autoComplete=\"off\">\n                        \n                        <FormGroup text=\"first name\">\n                            <Input\n                                type=\"text\" required\n                                className=\"form-control\"\n                                name=\"firstname\"\n                                value={firstname}\n                                onChange={onChangeFirstname}\n                                validations={[vfirstname]}\n                            />\n                        </FormGroup>\n\n                        <FormGroup text=\"email address\">\n                            <Input\n                                type=\"text\" required\n                                className=\"form-control\"\n                                name=\"email\"\n                                value={email}\n                                onChange={onChangeEmail}\n                                validations={[required, vemail]}\n                            />\n                        </FormGroup>\n\n                        <FormGroup text=\"password\">\n                            <Input\n                                type=\"password\" required\n                                className=\"form-control\"\n                                name=\"password\"\n                                value={password}\n                                onChange={onChangePassword}\n                                validations={[required, vpassword]}\n                            />\n                        </FormGroup>\n\n                        <div className=\"button-div\">\n                            <button>Sign Up</button>\n                        </div>\n \n                    </Form>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react'\n\nconst Confirmation = (props) => {\n\n    const data = props.location.state\n    const firstname = data[0]\n    const email = data[1]\n    \n    return (\n        <div className=\"wrapper\">\n            <div className=\"container\">\n\n                <div className=\"sub-section\">\n                    <h1 className=\"light-heading\">Welcome,</h1>\n                    <h1>{firstname}!</h1>\n                </div>\n\n                <div className=\"sub-section\">\n                    You have been registered for this awesome service. Please check your email listed below for instructions.\n                </div>\n\n                <div className=\"sub-section\">\n                    <div className=\"email-text\">\n                        {email}\n                    </div>\n                </div>\n\n                <div className=\"button-div\">\n                    <button>Sign In</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Confirmation;","// import logo from './logo.svg';\nimport './App.css';\n\nimport { Switch, Route } from 'react-router-dom';\n\n// components\nimport Home from \"./components/Home\";\nimport Confirmation from \"./components/Confirmation\";\n\nconst App = () => {\n  return (\n    <Switch>\n      <Route exact path={[\"/\", \"/home\"]} component={Home} />\n      <Route exact path=\"/confirmation\" component={Confirmation}/>\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter basename={'/flipgrid-code-challenge/'}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}